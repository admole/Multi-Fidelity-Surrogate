/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1812                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

// Constants
Height      4.0;
Width       9.0;
Cube        1.0;
Spacing     4.0;
Length      14.0;
Inlet       2.0;

// Locations
z0      #calc "0 - $Width / 2.0";
z1      #calc "0 - 3.0/2.0 * $Cube";
z2      #calc "0 - $Cube / 2.0";
z3      #calc "$Cube / 2.0";
z4      #calc "3.0/2.0 * $Cube";
z5      #calc "$Width / 2.0";

x0      0.0;
x1      #calc "$Inlet - $Cube";
x2      $Inlet;
x3      #calc "$Inlet + $Cube";
x4      #calc "$Inlet + 2 * $Cube";
x5      #calc "$Inlet + $Spacing";
x6      #calc "$Inlet + $Cube + $Spacing";
x7      #calc "$Inlet + $Cube + $Spacing + $Cube";
x8      #calc "$Inlet + $Spacing + 3 * $Cube";
x9      $Length;

y0      0.0;
y1      $Cube;
y2      #calc "2 * $Cube";
y3      $Height;

// Number of cells
Nxi     10;
Nxc     40;
Nxb     25;
Nxo     20;

Nyl     85;
Nyu     15;

Nzo     15;
Nzc     $Nxc;

Nnc     75;

// Grading
ywall   20.0;
yfar    3.0;

xin     0.4;
xc      1;
xb      1;
xo      10;

zc      1;
zr      7.5;      
zl      #calc "1.0 / $zr";

nc      20;
ncm     #calc "1.0 / $nc";

vertices
(

    ($x0 $y0 $z0)   //0
    ($x1 $y0 $z0)   //1
    ($x4 $y0 $z0)   //2
    ($x5 $y0 $z0)   //3
    ($x8 $y0 $z0)   //4
    ($x9 $y0 $z0)   //5

    ($x0 $y2 $z0)   //6
    ($x1 $y2 $z0)   //7
    ($x4 $y2 $z0)   //8
    ($x5 $y2 $z0)   //9
    ($x8 $y2 $z0)   //10
    ($x9 $y2 $z0)   //11

    ($x0 $y3 $z0)   //12
    ($x1 $y3 $z0)   //13
    ($x4 $y3 $z0)   //14
    ($x5 $y3 $z0)   //15
    ($x8 $y3 $z0)   //16
    ($x9 $y3 $z0)   //17

//--------------------------//

    ($x0 $y0 $z1)   //18
    ($x1 $y0 $z1)   //19
    ($x4 $y0 $z1)   //20
    ($x5 $y0 $z1)   //21
    ($x8 $y0 $z1)   //22
    ($x9 $y0 $z1)   //23

    ($x0 $y2 $z1)   //24
    ($x1 $y2 $z1)   //25
    ($x4 $y2 $z1)   //26
    ($x5 $y2 $z1)   //27
    ($x8 $y2 $z1)   //28
    ($x9 $y2 $z1)   //29

    ($x0 $y3 $z1)   //30
    ($x1 $y3 $z1)   //31
    ($x4 $y3 $z1)   //32
    ($x5 $y3 $z1)   //33
    ($x8 $y3 $z1)   //34
    ($x9 $y3 $z1)   //35

//--------------------------//

    ($x2 $y0 $z2)   //36
    ($x3 $y0 $z2)   //37
    ($x6 $y0 $z2)   //38
    ($x7 $y0 $z2)   //39

    ($x2 $y1 $z2)   //40
    ($x3 $y1 $z2)   //41
    ($x6 $y1 $z2)   //42
    ($x7 $y1 $z2)   //43

//--------------------------//

    ($x2 $y0 $z3)   //44
    ($x3 $y0 $z3)   //45
    ($x6 $y0 $z3)   //46
    ($x7 $y0 $z3)   //47

    ($x2 $y1 $z3)   //48
    ($x3 $y1 $z3)   //49
    ($x6 $y1 $z3)   //50
    ($x7 $y1 $z3)   //51

//--------------------------//

    ($x0 $y0 $z4)   //52
    ($x1 $y0 $z4)   //53
    ($x4 $y0 $z4)   //54
    ($x5 $y0 $z4)   //55
    ($x8 $y0 $z4)   //56
    ($x9 $y0 $z4)   //57

    ($x0 $y2 $z4)   //58
    ($x1 $y2 $z4)   //59
    ($x4 $y2 $z4)   //60
    ($x5 $y2 $z4)   //61
    ($x8 $y2 $z4)   //62
    ($x9 $y2 $z4)   //63

    ($x0 $y3 $z4)   //64
    ($x1 $y3 $z4)   //65
    ($x4 $y3 $z4)   //66
    ($x5 $y3 $z4)   //67
    ($x8 $y3 $z4)   //68
    ($x9 $y3 $z4)   //69

//--------------------------//

    ($x0 $y0 $z5)   //70
    ($x1 $y0 $z5)   //71
    ($x4 $y0 $z5)   //72
    ($x5 $y0 $z5)   //73
    ($x8 $y0 $z5)   //74
    ($x9 $y0 $z5)   //75

    ($x0 $y2 $z5)   //76
    ($x1 $y2 $z5)   //77
    ($x4 $y2 $z5)   //78
    ($x5 $y2 $z5)   //79
    ($x8 $y2 $z5)   //80
    ($x9 $y2 $z5)   //81

    ($x0 $y3 $z5)   //82
    ($x1 $y3 $z5)   //83
    ($x4 $y3 $z5)   //84
    ($x5 $y3 $z5)   //85
    ($x8 $y3 $z5)   //86
    ($x9 $y3 $z5)   //87

);

edges
(
);

blocks
(
    //Front-New
    hex (0  1  7  6   18 19 25 24)  ($Nxi $Nyl $Nzo) simpleGrading ($xin $ywall $zl)        //0
    hex (18 19 25 24  52 53 59 58)  ($Nxi $Nyl $Nzc) simpleGrading ($xin $ywall $zc)
    hex (52 53 59 58  70 71 77 76)  ($Nxi $Nyl $Nzo) simpleGrading ($xin $ywall $zr)
    hex (6  7  13 12  24 25 31 30)  ($Nxi $Nyu $Nzo) simpleGrading ($xin $yfar $zl)
    hex (24 25 31 30  58 59 65 64)  ($Nxi $Nyu $Nzc) simpleGrading ($xin $yfar $zc)
    hex (58 59 65 64  76 77 83 82)  ($Nxi $Nyu $Nzo) simpleGrading ($xin $yfar $zr)

    //Cube1-edges
    hex (1  2  8  7   19 20 26 25)  ($Nxc $Nyl $Nzo) simpleGrading ($xc $ywall $zl)         //6
    hex (53 54 60 59  71 72 78 77)  ($Nxc $Nyl $Nzo) simpleGrading ($xc $ywall $zr)
    hex (7  8  14 13  25 26 32 31)  ($Nxc $Nyu $Nzo) simpleGrading ($xc $yfar $zl)
    hex (59 60 66 65  77 78 84 83)  ($Nxc $Nyu $Nzo) simpleGrading ($xc $yfar $zr)
    hex (25 26 32 31  59 60 66 65)  ($Nxc $Nyu $Nzc) simpleGrading ($xc $yfar $zc)

    //Cube1
    hex (36 44 48 40  19 53 59 25)  ($Nzc $Nyl $Nnc) simpleGrading ($zc $ywall $nc)    //f      //11
    hex (20 54 60 26  37 45 49 41)  ($Nzc $Nyl $Nnc) simpleGrading ($zc $ywall $ncm)     //b
    hex (19 20 26 25  36 37 41 40)  ($Nxc $Nyl $Nnc) simpleGrading ($xc $ywall $ncm)     //r
    hex (44 45 49 48  53 54 60 59)  ($Nxc $Nyl $Nnc) simpleGrading ($xc $ywall $nc)     //l
    hex (40 48 49 41  25 59 60 26)  ($Nxc $Nzc $Nnc) simpleGrading ($xc $zc    $nc)     //t

    //Gap-New
    hex (2  3  9  8   20 21 27 26)  ($Nxb $Nyl $Nzo) simpleGrading ($xb $ywall $zl)         //16
    hex (20 21 27 26  54 55 61 60)  ($Nxb $Nyl $Nzc) simpleGrading ($xb $ywall $zc)
    hex (54 55 61 60  72 73 79 78)  ($Nxb $Nyl $Nzo) simpleGrading ($xb $ywall $zr)
    hex (8  9  15 14  26 27 33 32)  ($Nxb $Nyu $Nzo) simpleGrading ($xb $yfar $zl)
    hex (26 27 33 32  60 61 67 66)  ($Nxb $Nyu $Nzc) simpleGrading ($xb $yfar $zc)
    hex (60 61 67 66  78 79 85 84)  ($Nxb $Nyu $Nzo) simpleGrading ($xb $yfar $zr)

    //Cube2-edges
    hex (3  4  10 9   21 22 28 27)  ($Nxc $Nyl $Nzo) simpleGrading ($xc $ywall $zl)         //22
    hex (55 56 62 61  73 74 80 79)  ($Nxc $Nyl $Nzo) simpleGrading ($xc $ywall $zr)
    hex (9  10 16 15  27 28 34 33)  ($Nxc $Nyu $Nzo) simpleGrading ($xc $yfar $zl)
    hex (61 62 68 67  79 80 86 85)  ($Nxc $Nyu $Nzo) simpleGrading ($xc $yfar $zr)
    hex (27 28 34 33  61 62 68 67)  ($Nxc $Nyu $Nzc) simpleGrading ($xc $yfar $zc)

    //Cube2
    hex (38 46 50 42  21 55 61 27)  ($Nzc $Nyl $Nnc) simpleGrading ($zc $ywall $nc)    //f      //27
    hex (22 56 62 28  39 47 51 43)  ($Nzc $Nyl $Nnc) simpleGrading ($zc $ywall $ncm)     //b
    hex (21 22 28 27  38 39 43 42)  ($Nxc $Nyl $Nnc) simpleGrading ($xc $ywall $ncm)     //r
    hex (46 47 51 50  55 56 62 61)  ($Nxc $Nyl $Nnc) simpleGrading ($xc $ywall $nc)     //l
    hex (42 50 51 43  27 61 62 28)  ($Nxc $Nzc $Nnc) simpleGrading ($xc $zc    $nc)     //t

    //Back-New
    hex (4  5  11 10  22 23 29 28)  ($Nxo $Nyl $Nzo) simpleGrading ($xo $ywall $zl)         //32
    hex (22 23 29 28  56 57 63 62)  ($Nxo $Nyl $Nzc) simpleGrading ($xo $ywall $zc)
    hex (56 57 63 62  74 75 81 80)  ($Nxo $Nyl $Nzo) simpleGrading ($xo $ywall $zr)
    hex (10 11 17 16  28 29 35 34)  ($Nxo $Nyu $Nzo) simpleGrading ($xo $yfar $zl)
    hex (28 29 35 34  62 63 69 68)  ($Nxo $Nyu $Nzc) simpleGrading ($xo $yfar $zc)
    hex (62 63 69 68  80 81 87 86)  ($Nxo $Nyu $Nzo) simpleGrading ($xo $yfar $zr)


);

boundary
(
    INLET
    {
        type            patch;
        faces           (
                        (0  6  24 18)
                        (18 24 58 52)
                        (52 58 76 70)
                        (6  12 30 24)
                        (24 30 64 58)
                        (58 64 82 76)
                        );
    }

    OUTLET
    {
        type            patch;
        faces           (
                        (5  23 29 11)
                        (23 57 63 29)
                        (57 75 81 63)
                        (11 29 35 17)
                        (29 63 69 35)
                        (63 81 87 69)
                        );
    }

    WALL
    {
        type            wall;
        faces           (
                        (0  18 19 1 )
                        (18 52 53 19)
                        (52 70 71 53)

                        (1  19 20 2 )
                        (19 20 37 36)
                        (37 45 54 20)
                        (44 53 54 45)
                        (19 53 44 36)
                        (53 71 72 54)

                        (2  20 21 3 )
                        (20 54 55 21)
                        (54 72 73 55)

                        (3  21 22 4 )
                        (21 38 39 22)
                        (39 47 56 22)
                        (46 55 56 47)
                        (21 55 46 38)
                        (55 73 74 56)

                        (4  22 23 5 )
                        (22 56 57 23)
                        (56 74 75 57)
                        );
    }

    CUBE1
    {
        type            wall;
        faces           (
                        (36 44 48 40)
                        (36 40 41 37)
                        (37 41 49 45)
                        (45 49 48 44)
                        (40 48 49 41)
                        );
    }

    CUBE2
    {
        type            wall;
        faces           (
                        (38 46 50 42)
                        (38 42 43 39)
                        (39 43 51 47)
                        (47 51 50 46)
                        (42 50 51 43)
                        );
    }

    RIGHT
    {
        type            patch;
        faces           (
                        (0  1  7  6 )
                        (1  2  8  7 )
                        (2  3  9  8 )
                        (3  4  10 9 )
                        (4  5  11 10)
                        
                        (6  7  13 12)
                        (7  8  14 13)
                        (8  9  15 14)
                        (9  10 16 15)
                        (10 11 17 16)
                        );
    }

    LEFT
    {
        type            patch;
        faces           (
                        (70 76 77 71)
                        (71 77 78 72)
                        (72 78 79 73)
                        (73 79 80 74)
                        (74 80 81 75)

                        (76 82 83 77)
                        (77 83 84 78)
                        (78 84 85 79)
                        (79 85 86 80)
                        (80 86 87 81)
                        );
    }

    TOP
    {
        type            patch;
        faces           (
                        (12 13 31 30)
                        (13 14 32 31)
                        (14 15 33 32)
                        (15 16 34 33)
                        (16 17 35 34)

                        (30 31 65 64)
                        (31 32 66 65)
                        (32 33 67 66)
                        (33 34 68 67)
                        (34 35 69 68)

                        (64 65 83 82)
                        (65 66 84 83)
                        (66 67 85 84)
                        (67 68 86 85)
                        (68 69 87 86)

                        );
    }
);

mergePatchPairs
(
);


// ************************************************************************* //

